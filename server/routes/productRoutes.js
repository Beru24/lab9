const express = require("express");
const router = express.Router();
const Product = require("../models/Product");

// üìå L·∫•y danh s√°ch s·∫£n ph·∫©m t·ª´ MongoDB
router.get("/products", async (req, res) => {
    try {
        const products = await Product.find();  // L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
        res.json(products);
    } catch (err) {
        res.status(500).json({ message: "L·ªói server" });
    }
});

// üìå L·∫•y th√¥ng tin m·ªôt s·∫£n ph·∫©m theo gi√° (price)
router.get("/products/:price", async (req, res) => {
    const productPrice = req.params.price;  // L·∫•y price t·ª´ URL

    try {
        // T√¨m t·∫•t c·∫£ s·∫£n ph·∫©m c√≥ gi√° b·∫±ng price
        const products = await Product.find({ price: productPrice });

        if (products.length === 0) {
            return res.status(404).json({ message: "Kh√¥ng c√≥ s·∫£n ph·∫©m n√†o v·ªõi gi√° n√†y" });
        }

        res.json(products);  // Tr·∫£ v·ªÅ danh s√°ch s·∫£n ph·∫©m
    } catch (err) {
        res.status(500).json({ message: "L·ªói server" });
    }
});

// üìå Th√™m s·∫£n ph·∫©m v√†o MongoDB
router.post("/products", async (req, res) => {
    const { name, price, image, category, description, stock } = req.body;

    // T·∫°o ƒë·ªëi t∆∞·ª£ng s·∫£n ph·∫©m m·ªõi
    const newProduct = new Product({
        name,
        price,
        image,
        category,
        description,
        stock
    });

    try {
        const savedProduct = await newProduct.save();  // L∆∞u s·∫£n ph·∫©m v√†o MongoDB
        res.status(201).json(savedProduct);  // Tr·∫£ v·ªÅ s·∫£n ph·∫©m ƒë√£ l∆∞u
    } catch (err) {
        res.status(500).json({ message: "L·ªói server" });
    }
});

module.exports = router;  // Export routes ƒë·ªÉ s·ª≠ d·ª•ng trong server
