const express = require("express");
const Cart = require("../models/Cart");
const Product = require("../models/Product");

const router = express.Router();

// üõí Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
router.post("/cart", async (req, res) => {
    try {
        const { userId, productId, quantity } = req.body;

        // üîé L·∫•y th√¥ng tin s·∫£n ph·∫©m t·ª´ DB
        const product = await Product.findById(productId);
        if (!product) {
            return res.status(404).json({ error: "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m" });
        }

        // üîé Ki·ªÉm tra gi·ªè h√†ng c√≥ t·ªìn t·∫°i ch∆∞a
        let cart = await Cart.findOne({ userId });
        if (!cart) {
            cart = new Cart({ userId, items: [] });
        }

        // Ki·ªÉm tra s·∫£n ph·∫©m ƒë√£ c√≥ trong gi·ªè ch∆∞a
        const itemIndex = cart.items.findIndex(item => item.productId.toString() === productId);

        if (itemIndex > -1) {
            cart.items[itemIndex].quantity += quantity || 1;
        } else {
            cart.items.push({ 
                productId: product._id,
                name: product.name,
                price: product.price,
                image: product.image,
                quantity: quantity || 1
            });
        }

        await cart.save();
        res.json({ success: true, message: "Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng th√†nh c√¥ng!", cart });
    } catch (err) {
        res.status(500).json({ error: "L·ªói khi th√™m v√†o gi·ªè h√†ng", details: err.message });
    }
});
// üõç L·∫•y danh s√°ch s·∫£n ph·∫©m trong gi·ªè h√†ng c·ªßa m·ªôt user
router.get("/cart/:userId", async (req, res) => {
    try {
        const cart = await Cart.findOne({ userId: req.params.userId });
        if (!cart) return res.json({ success: true, items: [] });

        res.json({ success: true, items: cart.items });
    } catch (err) {
        res.status(500).json({ error: "L·ªói khi l·∫•y gi·ªè h√†ng", details: err.message });
    }
});

// ‚ùå X√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
router.delete("/cart/:userId/:productId", async (req, res) => {
    try {
        const { userId, productId } = req.params;
        const cart = await Cart.findOne({ userId });

        if (!cart) return res.json({ success: false, message: "Gi·ªè h√†ng tr·ªëng" });

        cart.items = cart.items.filter(item => item.productId.toString() !== productId);
        await cart.save();

        res.json({ success: true, cart });
    } catch (err) {
        res.status(500).json({ error: "L·ªói khi x√≥a s·∫£n ph·∫©m", details: err.message });
    }
});


// üì¶ API l·∫•y to√†n b·ªô gi·ªè h√†ng c·ªßa t·∫•t c·∫£ user (ch·ªâ d√πng ƒë·ªÉ debug)
router.get("/cart", async (req, res) => {
    try {
        const carts = await Cart.find().populate("items.productId");
        res.json({ success: true, carts });
    } catch (err) {
        res.status(500).json({ error: "L·ªói khi l·∫•y to√†n b·ªô gi·ªè h√†ng", details: err.message });
    }
});

module.exports = router;
